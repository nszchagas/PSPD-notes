#include <stdio.h>
#include <mpi.h>
#define MASTER 0
#define TAG 0

int main(int argc, char *argv[]){
    int nprocs, rank;
    int vetor[100];
    int offset;

    MPI_Init(&argc, &argv);
    MPI_Comm_rank(MPI_COMM_WORLD, &rank);
    MPI_Comm_size(MPI_COMM_WORLD, &nprocs);
    if(rank == MASTER) {
        for (int i = 0; i < 100; i ++) {
            vetor[i] = i;
        }
        offset = rand() % 15;
        for (int i = 0; i < offset; i ++) {
            printf("%d\n", vetor[i])
        }
        MPI_Send(vetor , offset, MPI_INT, 1, TAG, MPI_COMM_WORLD);

    } else {
        MPI_Recv(vetor, &offset, MASTER, TAG, MPI_COMM_WORLD, MPI_STATUS_IGNORE);
        int new_offset = offset + rand() % 15;
        for (int i = offset; i < 100 && i < new_offset; i++) {
            printf("%d\n", vetor[i])
        }
    }

    return 0;

}